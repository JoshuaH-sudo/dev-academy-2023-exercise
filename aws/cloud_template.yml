AWSTemplateFormatVersion: 2010-09-09
Resources:
  CloudMap:
    Properties:
      Description: Service Map for Docker Compose project hsl-bike-app
      Name: hsl-bike-app.local
      Vpc: vpc-0184ca5a98b218c37
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
  Cluster:
    Properties:
      ClusterName: hsl-bike-app
      Tags:
      - Key: com.docker.compose.project
        Value: hsl-bike-app
    Type: AWS::ECS::Cluster
  Default8080Ingress:
    Properties:
      CidrIp: 0.0.0.0/0
      Description: hsl_bike_app:8080/tcp on default network
      FromPort: 8080
      GroupId:
        Ref: DefaultNetwork
      IpProtocol: TCP
      ToPort: 8080
    Type: AWS::EC2::SecurityGroupIngress
  DefaultNetwork:
    Properties:
      GroupDescription: hsl-bike-app Security Group for default network
      Tags:
      - Key: com.docker.compose.project
        Value: hsl-bike-app
      - Key: com.docker.compose.network
        Value: hsl-bike-app_default
      VpcId: vpc-0184ca5a98b218c37
    Type: AWS::EC2::SecurityGroup
  DefaultNetworkIngress:
    Properties:
      Description: Allow communication within network default
      GroupId:
        Ref: DefaultNetwork
      IpProtocol: "-1"
      SourceSecurityGroupId:
        Ref: DefaultNetwork
    Type: AWS::EC2::SecurityGroupIngress
  HslbikeappService:
    DependsOn:
    - HslbikeappTCP8080Listener
    Properties:
      Cluster:
        Fn::GetAtt:
        - Cluster
        - Arn
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DeploymentController:
        Type: ECS
      DesiredCount: 1
      LaunchType: FARGATE
      LoadBalancers:
      - ContainerName: hsl_bike_app
        ContainerPort: 8080
        TargetGroupArn:
          Ref: HslbikeappTCP8080TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
          - Ref: DefaultNetwork
          Subnets:
          - subnet-05b198577868ae8e3
          - subnet-0d00ccf5f1b79ba4a
          - subnet-09df8bdf6bc065650
      PlatformVersion: 1.4.0
      PropagateTags: SERVICE
      SchedulingStrategy: REPLICA
      ServiceRegistries:
      - RegistryArn:
          Fn::GetAtt:
          - HslbikeappServiceDiscoveryEntry
          - Arn
      Tags:
      - Key: com.docker.compose.project
        Value: hsl-bike-app
      - Key: com.docker.compose.service
        Value: hsl_bike_app
      TaskDefinition:
        Ref: HslbikeappTaskDefinition
    Type: AWS::ECS::Service
  HslbikeappServiceDiscoveryEntry:
    Properties:
      Description: '"hsl_bike_app" service discovery entry in Cloud Map'
      DnsConfig:
        DnsRecords:
        - TTL: 60
          Type: A
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: hsl_bike_app
      NamespaceId:
        Ref: CloudMap
    Type: AWS::ServiceDiscovery::Service
  HslbikeappTCP8080Listener:
    Properties:
      DefaultActions:
      - ForwardConfig:
          TargetGroups:
          - TargetGroupArn:
              Ref: HslbikeappTCP8080TargetGroup
        Type: forward
      LoadBalancerArn:
        Ref: LoadBalancer
      Port: 8080
      Protocol: TCP
    Type: AWS::ElasticLoadBalancingV2::Listener
  HslbikeappTCP8080TargetGroup:
    Properties:
      Port: 8080
      Protocol: TCP
      Tags:
      - Key: com.docker.compose.project
        Value: hsl-bike-app
      TargetType: ip
      VpcId: vpc-0184ca5a98b218c37
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
  HslbikeappTaskDefinition:
    Properties:
      ContainerDefinitions:
      - Command:
        - '[{"Name":"db_mongo_uri","Keys":null}]'
        Essential: false
        Image: docker/ecs-secrets-sidecar:1.0
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group:
              Ref: LogGroup
            awslogs-region:
              Ref: AWS::Region
            awslogs-stream-prefix: hsl-bike-app
        MountPoints:
        - ContainerPath: /run/secrets/
          SourceVolume: secrets
        Name: Hslbikeapp_Secrets_InitContainer
        Secrets:
        - Name: db_mongo_uri
          ValueFrom: arn:aws:secretsmanager:ap-southeast-2:788286108805:secret:hsl-bike-app-mongo-uri-4h0gb5
      - Command:
        - ap-southeast-2.compute.internal
        - hsl-bike-app.local
        Essential: false
        Image: docker/ecs-searchdomain-sidecar:1.0
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group:
              Ref: LogGroup
            awslogs-region:
              Ref: AWS::Region
            awslogs-stream-prefix: hsl-bike-app
        Name: Hslbikeapp_ResolvConf_InitContainer
      - DependsOn:
        - Condition: SUCCESS
          ContainerName: Hslbikeapp_Secrets_InitContainer
        - Condition: SUCCESS
          ContainerName: Hslbikeapp_ResolvConf_InitContainer
        Environment:
        - Name: MONGO_URI_FILE
          Value: /run/secrets/db_mongo_uri
        - Name: NODE_ENV
          Value: production
        - Name: PORT
          Value: "8080"
        Essential: true
        Image: docker.io/joshuahsudo/hsl_bike_app:latest
        LinuxParameters: {}
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group:
              Ref: LogGroup
            awslogs-region:
              Ref: AWS::Region
            awslogs-stream-prefix: hsl-bike-app
        MountPoints:
        - ContainerPath: /run/secrets/
          ReadOnly: true
          SourceVolume: secrets
        Name: hsl_bike_app
        PortMappings:
        - ContainerPort: 8080
          HostPort: 8080
          Protocol: tcp
        WorkingDirectory: /home/node/app
      Cpu: "2048"
      ExecutionRoleArn:
        Ref: HslbikeappTaskExecutionRole
      Family: hsl-bike-app-hsl_bike_app
      Memory: "16384"
      NetworkMode: awsvpc
      RequiresCompatibilities:
      - FARGATE
      Volumes:
      - Name: secrets
    Type: AWS::ECS::TaskDefinition
  HslbikeappTaskExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Condition: {}
          Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - secretsmanager:GetSecretValue
            - ssm:GetParameters
            - kms:Decrypt
            Condition: {}
            Effect: Allow
            Principal: {}
            Resource:
            - arn:aws:secretsmanager:ap-southeast-2:788286108805:secret:hsl-bike-app-mongo-uri-4h0gb5
        PolicyName: hsl_bike_appGrantAccessToSecrets
      Tags:
      - Key: com.docker.compose.project
        Value: hsl-bike-app
      - Key: com.docker.compose.service
        Value: hsl_bike_app
    Type: AWS::IAM::Role
  LoadBalancer:
    Properties:
      LoadBalancerAttributes:
      - Key: load_balancing.cross_zone.enabled
        Value: "true"
      Scheme: internet-facing
      Subnets:
      - subnet-05b198577868ae8e3
      - subnet-0d00ccf5f1b79ba4a
      - subnet-09df8bdf6bc065650
      Tags:
      - Key: com.docker.compose.project
        Value: hsl-bike-app
      Type: network
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  LogGroup:
    Properties:
      LogGroupName: /docker-compose/hsl-bike-app
    Type: AWS::Logs::LogGroup
